function split(input, sep)
    if sep == nil then
        sep = "%s" --default sep to space
    end

    local t = {}

    for match in string.gmatch(input, "([^" .. sep .. "]+)") do
        table.insert(t, match)
    end

    return t
end

function join(data, sep)
    if sep == nil then
        sep = ' '
    end
    if #data == 0 then return "" end
    if #data == 1 then return data[1] end
    local t = data[1]
    for i=2,#data do
        t = t..sep..data[i]
    end
    return t
end

function getKeys(t)
    local t2 = {}
    local i = 0
    for k, v in pairs(t) do
        i = i + 1
        t2[i] = k
    end
    return t2
end

function containsKey(t, key)
    local val = false
    -- print("looking for "..key)
    for k, v in pairs(t) do
        if k == key then
        --    print(v.."=="..key)
            val = true
        --else
        --    print(v.."!="..key)
        end
    end
    return val
end

function containsValue(t, key)
    local val = false
    -- print("looking for "..key)
    for k, v in pairs(t) do
        if v == key then
        --    print(v.."=="..key)
            val = true
        --else
        --    print(v.."!="..key)
        end
    end
    return val
end

function slice(array, start, _end)
    if _end == nil then
        _end = #array
    end
    results = {}
    local diff = _end - start
    for i=0,diff do
        results[i] = array[i + start]
    end
    return results
end

-- credit: http://www.computercraft.info/forums2/index.php?/topic/11771-print-coloured-text-easily/
function printWithFormat(...)
    local s = "&0"
    for k, v in ipairs(arg) do
        s = s .. v
    end
    s = s .. "&0"

    local fields = {}
    local lastcolor, lastpos = "0", 0
    for pos, clr in s:gmatch"()&(%x)" do
        table.insert(fields, {s:sub(lastpos + 2, pos - 1), lastcolor})
        lastcolor, lastpos = clr , pos
    end

    for i = 2, #fields do
        term.setTextColor(2 ^ (tonumber(fields[i][2], 16)))
        io.write(fields[i][1])
    end
    io.write('\n')
    term.setTextColor(colors.white)
end
